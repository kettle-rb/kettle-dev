LOADING DEBUGGER: true
Randomized with seed 23939
Updated /tmp/d20250902-635678-6vkcq1
.Skipping /tmp/d20250902-635678-3wjwl2/docs/guide.md (excluded by only filter)
Wrote /tmp/d20250902-635678-3wjwl2/README.md
.Wrote /tmp/d20250902-635678-7ajlfq/.github/workflows/ci.yml
Wrote /tmp/d20250902-635678-7ajlfq/README.md
Skipping /tmp/d20250902-635678-7ajlfq/lib/demo.rb (excluded by only filter)
...Error fetching backers.json: StandardError: boom
.Error parsing backers.json JSON: unexpected token 'not' at line 1 column 1
........No changes to backers or sponsors sections in /tmp/d20250902-635678-9eazsj/README.md.
..No recognized Open Collective tags found in /tmp/d20250902-635678-4edgpn/README.md. Expected one or more of: <!-- OPENCOLLECTIVE:START -->/<!-- OPENCOLLECTIVE:END -->, <!-- OPENCOLLECTIVE-INDIVIDUALS:START -->/<!-- OPENCOLLECTIVE-INDIVIDUALS:END -->, <!-- OPENCOLLECTIVE-ORGANIZATIONS:START -->/<!-- OPENCOLLECTIVE-ORGANIZATIONS:END -->.
...............................Updated backers section in /tmp/d20250902-635678-q6tvi8/README.md.
...Ensuring GitHub Actions workflows pass on main (me/repo) via remote 'origin'
CI ======================= 1/1
All GitHub workflows passing (1/1).
.....Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI  0/1
GitLab reports pipeline cannot run due to quota/minutes exhaustion. Result is unknown; continuing.
CI ======================= 1/1
GitLab pipeline passing.
.Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI  0/1
.Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI  0/1
GitLab pipeline is blocked. Result is unknown; continuing.
CI ======================= 1/1
GitLab pipeline passing.
.............boom
.Creating GitHub release me/repo v1.2.3...
GitHub release creation skipped/failed: HTTP 201: {}
.Creating GitHub release me/repo v1.0.0...
GitHub release creation skipped/failed: HTTP 201: {}
.CHANGELOG.md does not contain a section for 9.9.9. Skipping GitHub release creation.
.GITHUB_TOKEN present but could not determine GitHub owner/repo from remotes. Skipping release creation.
.Creating GitHub release me/repo v2.0.0...
GitHub release created for v2.0.0.
.Creating GitHub release me/repo v1.2.3...
GitHub release creation skipped/failed: HTTP 201: {"id":1}
.Creating GitHub release me/repo v3.0.0...
GitHub release creation skipped/failed: HTTP 500: oops
.GITHUB_TOKEN not set; skipping GitHub release creation. Set GITHUB_TOKEN with repo:public_repo (classic) or contents:write scope.
..............fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Updated require in spec/spec_helper.rb
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Skipped modifying spec/spec_helper.rb
.Wrote /tmp/d20250902-635678-fitgxf/.gitlab-ci.yml
.Wrote /tmp/d20250902-635678-y9yvhy/.opencollective.yml
Wrote /tmp/d20250902-635678-y9yvhy/CHANGELOG.md
Wrote /tmp/d20250902-635678-y9yvhy/FUNDING.md
.Wrote /tmp/d20250902-635678-v444kp/README.md
.Wrote /tmp/d20250902-635678-uktu6t/gemfiles/modular/optional.gemfile
.Wrote /tmp/d20250902-635678-7jke3w/my-gem.gemspec
.Wrote /tmp/d20250902-635678-y0z2x6/README.md
.Wrote /tmp/d20250902-635678-f9isbo/gemfiles/modular/style.gemfile
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-dstyoy/.env.local.example
Detected updates to .env.local.example. Proceeding because allowed=true.
.Wrote /tmp/d20250902-635678-fo0ho4/my-gem.gemspec
.WARNING: Minimum Ruby not detected
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-68rsh8/kettle-dev.gemspec
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-2dywyp/certs/pboling.pem
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
WARNING: Skipped copying certs/pboling.pem due to RuntimeError: nope
.Wrote /tmp/d20250902-635678-b1o1eq/README.md
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
[run] ArgumentError: boom
WARNING: Skipped .env.local example copy due to ArgumentError: boom
.Wrote /tmp/d20250902-635678-o4g1uv/.github/workflows/ci.yml
Wrote /tmp/d20250902-635678-o4g1uv/.github/FUNDING.yml
Wrote /tmp/d20250902-635678-o4g1uv/.github/workflows/ci.yml
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-8ed41f/gemfiles/modular/style.gemfile
.Wrote /tmp/d20250902-635678-nhrqb9/existing.gemspec
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Git hooks templates found:
  - /tmp/d20250902-635678-6u8hfy/.git-hooks/commit-subjects-goalie.txt
  - /tmp/d20250902-635678-6u8hfy/.git-hooks/footer-template.erb.txt
About these files:
- commit-subjects-goalie.txt:
  Lists commit subject prefixes to look for; if a commit subject starts with any listed prefix,
  kettle-commit-msg will append a footer to the commit message (when GIT_HOOK_FOOTER_APPEND=true).
  Defaults include release prep (üîñ Prepare release v) and checksum commits (üîíÔ∏è Checksums for v).
- footer-template.erb.txt:
  ERB template rendered to produce the footer. You can customize its contents and variables.
Where would you like to install these two templates?
  [l] Local to this project (/tmp/d20250902-635678-esk1tu/.git-hooks)
  [g] Global for this user (/home/pboling/.git-hooks)
  [s] Skip copying
Choose (l/g/s) [l]: Wrote /tmp/d20250902-635678-esk1tu/.git-hooks/commit-subjects-goalie.txt
Wrote /tmp/d20250902-635678-esk1tu/.git-hooks/footer-template.erb.txt
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Git hooks templates found:
  - /tmp/d20250902-635678-xfmcnq/.git-hooks/commit-subjects-goalie.txt
  - /tmp/d20250902-635678-xfmcnq/.git-hooks/footer-template.erb.txt
About these files:
- commit-subjects-goalie.txt:
  Lists commit subject prefixes to look for; if a commit subject starts with any listed prefix,
  kettle-commit-msg will append a footer to the commit message (when GIT_HOOK_FOOTER_APPEND=true).
  Defaults include release prep (üîñ Prepare release v) and checksum commits (üîíÔ∏è Checksums for v).
- footer-template.erb.txt:
  ERB template rendered to produce the footer. You can customize its contents and variables.
Where would you like to install these two templates?
  [l] Local to this project (/tmp/d20250902-635678-noqryv/.git-hooks)
  [g] Global for this user (/home/pboling/.git-hooks)
  [s] Skip copying
Choose (l/g/s) [l]: Wrote /tmp/d20250902-635678-noqryv/.git-hooks/commit-subjects-goalie.txt
Wrote /tmp/d20250902-635678-noqryv/.git-hooks/footer-template.erb.txt
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Installed /tmp/d20250902-635678-qpmajm/.git-hooks/commit-msg
Installed /tmp/d20250902-635678-qpmajm/.git-hooks/prepare-commit-msg
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Replaced /tmp/d20250902-635678-qpmajm/.git-hooks/commit-msg
Replaced /tmp/d20250902-635678-qpmajm/.git-hooks/prepare-commit-msg
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Kept existing /tmp/d20250902-635678-qpmajm/.git-hooks/commit-msg
Kept existing /tmp/d20250902-635678-qpmajm/.git-hooks/prepare-commit-msg
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
WARNING: Could not install hook commit-msg to /tmp/d20250902-635678-vw1rj/.git-hooks: StandardError: perm
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Git hooks templates found:
  - /tmp/d20250902-635678-94vb9h/.git-hooks/commit-subjects-goalie.txt
  - /tmp/d20250902-635678-94vb9h/.git-hooks/footer-template.erb.txt
About these files:
- commit-subjects-goalie.txt:
  Lists commit subject prefixes to look for; if a commit subject starts with any listed prefix,
  kettle-commit-msg will append a footer to the commit message (when GIT_HOOK_FOOTER_APPEND=true).
  Defaults include release prep (üîñ Prepare release v) and checksum commits (üîíÔ∏è Checksums for v).
- footer-template.erb.txt:
  ERB template rendered to produce the footer. You can customize its contents and variables.
Where would you like to install these two templates?
  [l] Local to this project (/tmp/d20250902-635678-spblof/.git-hooks)
  [g] Global for this user (/home/pboling/.git-hooks)
  [s] Skip copying
Choose (l/g/s) [l]: Skipping copy of .git-hooks templates.
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-rjd149/.envrc
Detected updates to .envrc and .env.local.example. Proceeding because allowed=true.
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-etopqo/.envrc
WARNING: Could not determine env file changes: StandardError: oops
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-bsrcur/.envrc
IMPORTANT: The following environment-related files were created/updated:
  - /tmp/d20250902-635678-bsrcur/.envrc
  - /tmp/d20250902-635678-bsrcur/.env.local.example
Please review these files. If .envrc changed, run:
  direnv allow
After that, re-run to resume:
  bundle exec rake kettle:dev:template allowed=true
  # or to run the full install afterwards:
  bundle exec rake kettle:dev:install allowed=true
...Wrote /tmp/d20250902-635678-tbdmsn/my-gem.gemspec
.
Git hooks templates found:
  - /tmp/d20250902-635678-cq74j3/.git-hooks/commit-subjects-goalie.txt
  - /tmp/d20250902-635678-cq74j3/.git-hooks/footer-template.erb.txt
About these files:
- commit-subjects-goalie.txt:
  Lists commit subject prefixes to look for; if a commit subject starts with any listed prefix,
  kettle-commit-msg will append a footer to the commit message (when GIT_HOOK_FOOTER_APPEND=true).
  Defaults include release prep (üîñ Prepare release v) and checksum commits (üîíÔ∏è Checksums for v).
- footer-template.erb.txt:
  ERB template rendered to produce the footer. You can customize its contents and variables.
Where would you like to install these two templates?
  [l] Local to this project (/tmp/d20250902-635678-cq74j3/.git-hooks)
  [g] Global for this user (/home/pboling/.git-hooks)
  [s] Skip copying
Skipping copy of .git-hooks templates.
............[clean?] StandardError: StandardError
..[initialize] LoadError: LoadError
.[initialize] LoadError: LoadError
.[initialize] LoadError: LoadError
[clean?] StandardError: StandardError
.[initialize] LoadError: LoadError
.bin/yard not found or not executable; ensure yard is installed via bundler
CHANGELOG.md updated with v9.9.9 section.
.bin/yard not found or not executable; ensure yard is installed via bundler
CHANGELOG.md updated with v9.9.9 section.
.bin/yard not found or not executable; ensure yard is installed via bundler
CHANGELOG.md updated with v2.0.14 section.
.........Failed to run bin/yard: StandardError: boom
.bin/yard not found or not executable; ensure yard is installed via bundler
.Could not find documented percentage in bin/yard output.
.Coverage JSON not found at /tmp/d20250902-635678-l45uqc/coverage/coverage.json.
Run: K_SOUP_COV_FORMATTERS="json" bin/rspec
.Failed to parse coverage: JSON::ParserError: unexpected token 'not' at line 1 column 1
.........bin/yard not found or not executable; ensure yard is installed via bundler
.bin/yard not found or not executable; ensure yard is installed via bundler
.Could not determine GitHub owner/repo from origin remote.
Make sure 'origin' points to github.com. Alternatively, set origin or update links manually afterward.
bin/yard not found or not executable; ensure yard is installed via bundler
CHANGELOG.md updated with v1.2.3 section.
..boom
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[initialize] LoadError: LoadError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[current_branch] StandardError: StandardError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[push] StandardError: StandardError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[remotes] StandardError: StandardError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[remote_url] StandardError: StandardError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
[remotes_with_urls] StandardError: StandardError
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
............................................................................
No .gemspec found in /tmp/d20250902-635678-wxlyz8; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc already contains PATH_add bin.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-wxlyz8/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-wxlyz8/.gitignore
kettle:dev:install complete.
.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-n67jdt/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-n67jdt/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-n67jdt/.gitignore
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-w6lg9o; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-w6lg9o/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-w6lg9o/.gitignore?
Add to .gitignore now [Y/n]: Skipping modification of .gitignore. Remember to add .env.local to avoid committing it.
kettle:dev:install complete.
.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
   Updated /tmp/d20250902-635678-fhnt9q/.envrc with PATH_add bin
IMPORTANT: .envrc was updated during kettle:dev:install.
Please review it and then run:
  direnv allow
After that, re-run to resume:
  bundle exec rake kettle:dev:install allowed=true
.
No .gemspec found in /tmp/d20250902-635678-q2atdg; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-q2atdg/.envrc? [y/N]: Y (forced)
   Updated /tmp/d20250902-635678-q2atdg/.envrc with PATH_add bin
Proceeding after .envrc update because force=true.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-q2atdg/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-q2atdg/.gitignore
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-acysqu; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
   Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-acysqu/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-acysqu/.gitignore
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
Checking git remote 'origin' to derive GitHub homepage...
ERROR: git remote 'origin' is not a GitHub URL (or not found): https://gitlab.example.com/acme/demo.git
To complete installation: set your GitHub repository as the 'origin' remote, and move any other forge to an alternate name.
Example:
  git remote rename origin something_else
  git remote add origin https://github.com/<org>/<repo>.git
After fixing, re-run: rake kettle:dev:install
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-27i6fg; skipping homepage check.
Summary of templating changes:
  Created:
    - a.txt
  Replaced:
    - b.txt
  Directory created:
    - dir1
  Directory replaced:
    - dir2
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-27i6fg/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-27i6fg/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-27i6fg/.gitignore
kettle:dev:install complete.
No .gemspec found in /tmp/d20250902-635678-27i6fg; skipping homepage check.
Summary of templating changes: (unavailable: StandardError: nope)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-27i6fg/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-ktfwok; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
   Updated /tmp/d20250902-635678-ktfwok/.envrc with PATH_add bin
Proceeding after .envrc update because allowed=true.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-ktfwok/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-ktfwok/.gitignore
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
Multiple gemspecs found; defaulting to a.gemspec for homepage check.
WARNING: spec.homepage not found in a.gemspec.
This gem should declare a GitHub homepage: https://github.com/<org>/<repo>
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-gic36w/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-gic36w/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-gic36w/.gitignore
kettle:dev:install complete.
.Removed .ruby-version and .ruby-gemset
No .gemspec found in /tmp/d20250902-635678-xu8zn5; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.WARNING: Skipped grapheme synchronization due to StandardError: kaboom
WARNING: An error occurred while checking gemspec homepage: StandardError: kaboom
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-62kivn; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-62kivn/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-62kivn/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-62kivn/.gitignore
kettle:dev:install complete.
.
Checking git remote 'origin' to derive GitHub homepage...
Current spec.homepage appears invalid: '${ORG}'" # interpolated/invalid on purpos
Suggested literal homepage: "https://github.com/acme/demo"
Update demo.gemspec to use this homepage? [Y/n]: Updated spec.homepage in demo.gemspec to https://github.com/acme/demo
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-fa8tj1/.envrc? [y/N]: Y (forced)
   Updated /tmp/d20250902-635678-fa8tj1/.envrc with PATH_add bin
Proceeding after .envrc update because force=true.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-fa8tj1/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-fa8tj1/.gitignore
kettle:dev:install complete.
Checking git remote 'origin' to derive GitHub homepage...
Current spec.homepage appears invalid: http://example.com/demo
Suggested literal homepage: "https://github.com/acme/demo"
Update demo.gemspec to use this homepage? [Y/n]: Skipping update of spec.homepage. You should set it to: https://github.com/acme/demo
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc already contains PATH_add bin.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-1pvd7i; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
   Updated /tmp/d20250902-635678-1pvd7i/.envrc with PATH_add bin
Proceeding after .envrc update because allowed=true.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-1pvd7i/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-1pvd7i/.gitignore
kettle:dev:install complete.
.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-yurl3m; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-yurl3m/.envrc? [y/N]:    Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-yurl3m/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-yurl3m/.gitignore
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-mp120k; skipping homepage check.
Summary of templating changes:
  Created:
    -
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.
No .gemspec found in /tmp/d20250902-635678-8nsfph; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
   Skipping modification of .envrc. You may add 'PATH_add bin' manually at the top.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-8nsfph/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-8nsfph/.gitignore
kettle:dev:install complete.
.
Checking git remote 'origin' to derive GitHub homepage...
ERROR: git remote 'origin' is not a GitHub URL (or not found): (none)
To complete installation: set your GitHub repository as the 'origin' remote, and move any other forge to an alternate name.
Example:
  git remote rename origin something_else
  git remote add origin https://github.com/<org>/<repo>.git
After fixing, re-run: rake kettle:dev:install
.
No .gemspec found in /tmp/d20250902-635678-i1fwqo; skipping homepage check.
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
..No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Your .envrc was created/updated by kettle:dev:template.
   It includes PATH_add bin so that executables in ./bin are on PATH when direnv is active.
   This allows running tools without the bin/ prefix inside the project directory.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
kettle:dev:install complete.
.No grapheme found after README H1. Enter a grapheme (emoji/symbol) to use for README, summary, and description:
Grapheme:
Summary of templating changes:
  (no files were created or replaced by kettle:dev:template)
Next steps:
1) Configure a shared git hooks path (optional, recommended):
   git config --global core.hooksPath .git-hooks
2) Install binstubs for this gem so the commit-msg tool is available in ./bin:
   bundle binstubs kettle-dev --path bin
   # After running, you should have bin/kettle-commit-msg (wrapper).
3) Install direnv (if not already):
   brew install direnv
   Adding PATH_add bin to your project's .envrc is recommended to expose ./bin on PATH.
Add PATH_add bin to /tmp/d20250902-635678-h9z4y1/.envrc? [y/N]: Y (forced)
   Updated /tmp/d20250902-635678-h9z4y1/.envrc with PATH_add bin
Proceeding after .envrc update because allowed=true.
WARNING: Do not commit .env.local; it often contains machine-local secrets.
Ensure your .gitignore includes:
  # direnv - brew install direnv
  .env.local
Would you like to add '.env.local' to /tmp/d20250902-635678-h9z4y1/.gitignore?
Add to .gitignore now [Y/n]: Added .env.local to /tmp/d20250902-635678-h9z4y1/.gitignore
kettle:dev:install complete.
..Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
origin/main and github/main are already in sync.
.Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
origin/main and github/main have diverged (1 ahead of GH, 1 behind GH).
Choose how to reconcile:
  [r] Rebase local/main on top of github/main (push to origin)
  [m] Merge --no-ff github/main into main (push to origin and github)
  [a] Abort
> Rebased main onto github/main and pushed to origin.
.Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
origin/main and github/main have diverged (1 ahead of GH, 1 behind GH).
Choose how to reconcile:
  [r] Rebase local/main on top of github/main (push to origin)
  [m] Merge --no-ff github/main into main (push to origin and github)
  [a] Abort
> Merged github/main into main and pushed to origin and github.
.Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
origin/main and github/main have diverged (1 ahead of GH, 1 behind GH).
Choose how to reconcile:
  [r] Rebase local/main on top of github/main (push to origin)
  [m] Merge --no-ff github/main into main (push to origin and github)
  [a] Abort
> .Detected version: "1.2.3"
[kettle-release] RubyGems check failed: StandardError: boom
  /var/home/pboling/.local/share/mise/installs/ruby/3.4.5/lib/ruby/gems/3.4.0/gems/rspec-mocks-3.13.5/lib/rspec/mocks/message_expectation.rb:188:in 'block in RSpec::Mocks::MessageExpectation#and_raise'
  /var/home/pboling/.local/share/mise/installs/ruby/3.4.5/lib/ruby/gems/3.4.0/gems/rspec-mocks-3.13.5/lib/rspec/mocks/message_expectation.rb:797:in 'block in RSpec::Mocks::Implementation#call'
  /var/home/pboling/.local/share/mise/installs/ruby/3.4.5/lib/ruby/gems/3.4.0/gems/rspec-mocks-3.13.5/lib/rspec/mocks/message_expectation.rb:796:in 'Array#map'
Proceeding without RubyGems latest version info.
Could not determine latest released version from RubyGems (offline?). Proceeding without sanity check.
Have you updated lib/**/version.rb and CHANGELOG.md for v1.2.3? [y/N]
> .Detected version: "1.2.10"
Latest released: 1.3.0 | Latest for series 1.2.x: 1.2.9
Proposed bump type: PATCH (from 1.2.9 -> 1.2.10)
Have you updated lib/**/version.rb and CHANGELOG.md for v1.2.10? [y/N]
> Appraisals detected at /var/home/pboling/src/kettle-rb/kettle-dev/Appraisals. Running: bin/rake appraisal:update
Trunk branch detected: main
Running build (you may be prompted for the signing key password)...
Running release (you may be prompted for signing key password and RubyGems MFA OTP)...
CHANGELOG.md does not contain a section for 1.2.10. Skipping GitHub release creation.
üöÄ Release mygem v1.2.10 Complete üöÄ
.Detected version: "9.9.9"
Could not determine latest released version from RubyGems (offline?). Proceeding without sanity check.
Have you updated lib/**/version.rb and CHANGELOG.md for v9.9.9? [y/N]
> No Appraisals file found; skipping appraisal:update
Trunk branch detected: main
Running build (you may be prompted for the signing key password)...
Running release (you may be prompted for signing key password and RubyGems MFA OTP)...
CHANGELOG.md does not contain a section for 9.9.9. Skipping GitHub release creation.
üöÄ Release mygem v9.9.9 Complete üöÄ
.Detected version: "9.9.9"
Could not determine latest released version from RubyGems (offline?). Proceeding without sanity check.
Have you updated lib/**/version.rb and CHANGELOG.md for v9.9.9? [y/N]
> Appraisals detected at /var/home/pboling/src/kettle-rb/kettle-dev/Appraisals. Running: bin/rake appraisal:update
Trunk branch detected: main
Running build (you may be prompted for the signing key password)...
Running release (you may be prompted for signing key password and RubyGems MFA OTP)...
CHANGELOG.md does not contain a section for 9.9.9. Skipping GitHub release creation.
üöÄ Release mygem v9.9.9 Complete üöÄ
.Detected version: "1.2.3"
Latest released: 1.2.3 (matches current series)
version.rb (1.2.3) matches the latest released version for series 1.2 (1.2.3).
.Detected version: "9.9.9"
Could not determine latest released version from RubyGems (offline?). Proceeding without sanity check.
Have you updated lib/**/version.rb and CHANGELOG.md for v9.9.9? [y/N]
> Appraisals detected at /var/home/pboling/src/kettle-rb/kettle-dev/Appraisals. Running: bin/rake appraisal:update
Trunk branch detected: main
TIP: For local dry-runs or testing the release workflow, set SKIP_GEM_SIGNING=true to avoid PEM password prompts.
Proceed with signing enabled? This may hang waiting for a PEM password. [y/N]: ...== Running local CI with act on ci.yml ==
Local CI succeeded for ci.yml.
== Running local CI with act on locked_deps.yaml ==
Local CI succeeded for locked_deps.yaml.
..........Detected version: "1.0.15"
Latest released: 1.2.10 (matches current series)
Could not determine latest released version from RubyGems (offline?). Proceeding without sanity check.
Have you updated lib/**/version.rb and CHANGELOG.md for v1.0.15? [y/N]
> No Appraisals file found; skipping appraisal:update
No changes to commit for release prep (continuing).
Trunk branch detected: main
Local main is up to date with origin/main.
$ git push origin feat
TIP: For local dry-runs or testing the release workflow, set SKIP_GEM_SIGNING=true to avoid PEM password prompts.
Proceed with signing enabled? This may hang waiting for a PEM password. [y/N]: Running build (you may be prompted for the signing key password)...
Running release (you may be prompted for signing key password and RubyGems MFA OTP)...
CHANGELOG.md does not contain a section for 1.0.15. Skipping GitHub release creation.
üöÄ Release kettle-dev v1.0.15 Complete üöÄ
.....Checksum OK stage: mygem-1.0.0.gem
.$ SKIP_GEM_SIGNING=true bundle exec rake release
.$ bin/rake
.$ bundle exec rake build
.$ SKIP_GEM_SIGNING=true bundle exec rake build
.Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
origin/main is ahead of github/main; no action required before push.
.Local main is up to date with origin/main.
GitHub remote detected: github. Fetching main...
Fast-forwarding main to include github/main...
.Remote 'all' detected. Fetching from all remotes and enforcing strict trunk parity...
.Local main is behind origin/main. Rebasing...
Rebase complete. Will push updated branch next.
.Remote 'all' detected. Fetching from all remotes and enforcing strict trunk parity...
Local main has all commits from remotes: origin
.Ensuring GitHub Actions workflows pass on feat (me/repo) via remote 'origin'
CI ======================= 2/2
All GitHub workflows passing (2/2).
.Ensuring GitHub Actions workflows pass on feat (me/repo) via remote 'origin'
CI  0/1
.Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI ======================= 1/1
GitLab pipeline passing.
...Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI  0/1
.........Detected version: "1.2.3"
Latest released: 1.2.4 (matches current series)
version.rb (1.2.3) is lower than the latest released version for series 1.2 (1.2.4).
.TIP: For local dry-runs or testing the release workflow, set SKIP_GEM_SIGNING=true to avoid PEM password prompts.
Non-interactive shell detected (non-TTY); skipping interactive signing confirmation.
Running build (you may be prompted for the signing key password)...
Running release (you may be prompted for signing key password and RubyGems MFA OTP)...
Creating GitHub release me/repo v1.1.1...
GitHub release creation skipped/failed: VCR::Errors::UnhandledHTTPRequestError:
================================================================================
An HTTP request has been made that VCR does not know how to handle:
  POST https://api.github.com/repos/me/repo/releases
There is currently no cassette in use. There are a few ways
you can configure VCR to handle this request:
  * If you're surprised VCR is raising this error
    and want insight about how VCR attempted to handle the request,
    you can use the debug_logger configuration option to log more details [1].
  * If you want VCR to record this request and play it back during future test
    runs, you should wrap your test (or this portion of your test) in a
    `VCR.use_cassette` block [2].
  * If you only want VCR to handle requests made while a cassette is in use,
    configure `allow_http_connections_when_no_cassette = true`. VCR will
    ignore this request since it is made when there is no cassette [3].
  * If you want VCR to ignore this request (and others like it), you can
    set an `ignore_request` callback [4].
[1] https://benoittgt.github.io/vcr/?v=6-3-1#/configuration/debug_logging
[2] https://benoittgt.github.io/vcr/?v=6-3-1#/getting_started
[3] https://benoittgt.github.io/vcr/?v=6-3-1#/configuration/allow_http_connections_when_no_cassette
[4] https://benoittgt.github.io/vcr/?v=6-3-1#/configuration/ignore_request
================================================================================
üöÄ Release kettle-dev v1.1.1 Complete üöÄ
...........Failed to parse CHANGELOG.md: ArgumentError: boom
...Found signing cert: /tmp/d20250902-635678-c3cd6y/certs/bob.pem
When prompted during build/release, enter the PEM password for ~/.ssh/gem-private_key.pem
.Ensuring GitLab pipeline passes on feat (me/repo) via remote 'gitlab'
CI ======================= 1/1
GitLab pipeline passing.
..$ git push all feat
Normal push to 'all' failed; retrying with force push...
.$ git push feat
Normal push failed; retrying with force push...
.$ git push origin feat
$ git push github feat
Push to github failed; retrying with force push...
$ git push gitlab feat
..Merging feat into main (after CI success)...
Merged feat into main and pushed. The PR (if any) should auto-close.
....No changes to commit for release prep (continuing).
.....== Running local CI with act on locked_deps.yml ==
Local CI succeeded for locked_deps.yml.
.Run local CI with 'act' before pushing? [Y/n] Skipping local CI: 'act' command not found. Install https://github.com/nektos/act to enable.
.Skipping local CI: no workflows found under .github/workflows.
.Skipping local CI: selected workflow not found: /tmp/d20250902-635678-w13n4u/.github/workflows/ci.yml
.== Running local CI with act on ci.yml ==
Local CI failed for ci.yml.
Rolling back release prep commit (soft reset)...
..........Remotes normalized. Origin: origin (git@gitlab.com:my-org/my-repo.git)
Current remotes (name => fetch URL):
Fetched from github (remote: gh) => OK
Fetched from gitlab (remote: origin) => OK
Fetched from codeberg (remote: cb) => OK
.Remotes normalized. Origin: origin (git@codeberg.org:my-org/my-repo.git)
Current remotes (name => fetch URL):
Fetched from github (remote: hub) => OK
Fetched from gitlab (remote: gl) => OK
Fetched from codeberg (remote: origin) => OK
.Remotes normalized. Origin: origin (git@github.com:my-org/my-repo.git)
Current remotes (name => fetch URL):
Fetched from github (remote: origin) => OK
Fetched from gitlab (remote: gl) => FAILED
Fetched from codeberg (remote: cb) => FAILED
Updated README federation summary to reflect current forge status
Some forges are not yet available. Use these import links to create mirrors:
  - Gitlab import: https://gitlab.com/projects/new#import_project
  - Codeberg import: https://codeberg.org/repo/create?scm=git&name=my-repo&migration=true
..Remotes normalized. Origin: origin (git@github.com:my-org/my-repo.git)
Current remotes (name => fetch URL):
Fetched from github (remote: origin) => OK
Fetched from gitlab (remote: gl) => OK
Fetched from codeberg (remote: cb) => OK
Updated README federation summary to reflect current forge status
....fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-vz8b7j/.github/workflows/ci.yml
Wrote /tmp/d20250902-635678-vz8b7j/.github/workflows/ci.yml
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d20250902-635678-c4u4vl/.env.local.example
Detected updates to .env.local.example. Proceeding because allowed=true.
.Latest GHA (main) for build.yml: ‚úÖ (completed/success)
.Latest GHA (main) for ci.yml: ‚úÖ (completed/success)
.GHA status: error StandardError: timeout
.Latest GHA (main) for ci.yml: ‚è≥Ô∏è (queued)
.Unknown option or missing workflow file: does_not_exist -> does_not_exist.yml
Available options:
  che => che_one.yml
  (others) =>
        che_two.yml
.Latest GHA (main) for style.yaml: ‚úÖ (completed/success)
.Latest GHA (main) for style.yaml: ‚úÖ (completed/success)
.GHA status: request failed (500)
.GHA status: (skipped; missing git branch or remote)
.Latest GHA (main) for ci.yml: none
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch n/a ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: n/a
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) sty => style.yaml           [‚Ä¶]
 3) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: n/a
HEAD: n/a
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 1) ci  => ci.yml               ‚úÖ (completed/success)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Latest GHA (main) for ci.yml: ‚è≥Ô∏è (unknown_state)
.Repo: n/a
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 1) ci  => ci.yml               n/a
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): status zzz: weird
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): .Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): .Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 1) ci  => ci.yml               ‚úÖ (completed/success)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ci:act: quit
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): Latest GHA (main) for ci.yml: ‚úÖ (completed/success)
.Repo: acme/demo
Upstream: origin/main
HEAD: abc123
Select a workflow to run with 'act':
 1) ci  => ci.yml               [‚Ä¶]
 2) q   => (quit)
(Fetching latest GHA status for branch main ‚Äî you can type your choice and press Enter)
Enter number or code (or 'q' to quit): ..Wrote /tmp/d19691231-635678-xzlumq/dest.txt
.Wrote /tmp/d19691231-635678-5r33js/dest.txt
.Wrote /tmp/d19691231-635678-quka7b/dest.txt
.Skipping /tmp/d19691231-635678-zck23f/dest.txt (create not allowed).
.Skipping /tmp/d19691231-635678-nbbcjx/dest.txt (replace not allowed).
.....Created /tmp/d19691231-635678-cyqlfm/dest
Updated /tmp/d19691231-635678-cyqlfm/dest
Skipped /tmp/d19691231-635678-cyqlfm/dest
.Wrote /tmp/d19691231-635678-u36sa1/dest.txt
Wrote /tmp/d19691231-635678-u36sa1/dest.txt
.......Proceed? [Y/n]: .Continue? [y/N]: ..Proceed? [y/N]: Proceed? [y/N]: .Continue? [Y/n]: ...
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.
Engine specified (truffleruby) is not known to rspec-pending_for.
If it is a real RUBY_ENGINE, please report as a bug to https://github.com/pboling/rspec-pending_for/issues
.[ensure_clean_git!] Errno::ENOENT: No such file or directory @ dir_chdir0 - /tmp/project
ERROR: Your git working tree has uncommitted changes.
kettle:dev:template may modify files (e.g., .github/, .gitignore, *.gemspec).
Please commit or stash your changes, then re-run: rake kettle:dev:template
Detected changes:
   M lib/file.rb
  ?? new.txt
(showing up to first 10 lines)
..[ensure_clean_git!] Errno::ENOENT: No such file or directory @ dir_chdir0 - /tmp/project
.[ensure_clean_git!] Errno::ENOENT: No such file or directory @ dir_chdir0 - /tmp/project
[ensure_clean_git!] StandardError: StandardError
.[ensure_clean_git!] StandardError: StandardError
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d19691231-635678-7ofr96/.env.local.example
IMPORTANT: The following environment-related files were created/updated:
  - /tmp/d19691231-635678-7ofr96/.env.local.example
Please review these files. If .envrc changed, run:
  direnv allow
After that, re-run to resume:
  bundle exec rake kettle:dev:template allowed=true
  # or to run the full install afterwards:
  bundle exec rake kettle:dev:install allowed=true
.fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Wrote /tmp/d19691231-635678-9g38n4/.github/workflows/ci.yml
Wrote /tmp/d19691231-635678-9g38n4/.github/workflows/ci.yml
.Updated /tmp/d19691231-635678-vd95rw/dest
..Updated /tmp/d19691231-635678-4nq1dv/same
.Created /tmp/d19691231-635678-g5djeq/dest
.Updated /tmp/d19691231-635678-p42k57/same
.Updated /tmp/d19691231-635678-186spq/dest
.Skipped /tmp/d19691231-635678-cdmzdd/dest
.
Finished in 18.49 seconds (files took 0.71855 seconds to load)
470 examples, 0 failures
Randomized with seed 23939
JSON Coverage report generated for Test Coverage to /var/home/pboling/src/kettle-rb/kettle-dev/coverage.         2804 / 2924 LOC (95.9%) covered.
